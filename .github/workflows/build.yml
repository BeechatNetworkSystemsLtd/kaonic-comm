name: Build Kaonic Comm OTA Package

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-kaonic-comm-ota:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-tags: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: apt-cache-${{ runner.os }}-${{ hashFiles('.github/workflows/build.yml') }}
          restore-keys: |
            apt-cache-${{ runner.os }}-

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build build-essential python3-pip
          pip3 install cryptography pathlib

      - name: Install Kaonic Yocto SDK
        run: |
          ASSET_NAME="stm32mp1-kaonic-proto-sdk-aarch64.sh"
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/BeechatNetworkSystemsLtd/kaonic-yocto/releases/latest \
            | grep "browser_download_url" \
            | grep "$ASSET_NAME" \
            | cut -d '"' -f 4)
          if [ -z "$DOWNLOAD_URL" ]; then
            echo "SDK asset not found in latest release."
            exit 1
          fi
          echo "Downloading SDK from $DOWNLOAD_URL"
          wget -q "$DOWNLOAD_URL" -O yocto-sdk.sh
          chmod +x yocto-sdk.sh
          echo "Installing Yocto SDK..."
          ./yocto-sdk.sh -y -d $HOME/yocto-sdk

      - name: Build 'kaonic-commd'
        run: |
          unset LD_LIBRARY_PATH
          source $HOME/yocto-sdk/environment-setup-cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Create Kaonic OTA package
        run: |
          echo $(git describe --tags --long)
          mkdir -p deploy
          echo "${{ secrets.BEECHAT_KAONIC_COMM_OTA_KEY }}" > ota_sign_key.pem
          chmod 600 ota_sign_key.pem
          python3 scripts/create-ota.py \
            -b ./build \
            -o ./deploy \
            -s ota_sign_key.pem \
            --keep

      - name: Upload OTA package artifact
        uses: actions/upload-artifact@v4
        with:
          name: kaonic-comm-ota
          path: deploy/kaonic-comm-ota/*
